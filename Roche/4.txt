/*@!Encoding:1252*/

/*


Code:	State
0:	Flashing Successful
1:	Flash INI file path not found
2:	No executable file added to the project
3:	CNA file path not found
4:	Sensor IP not provided
5:	Device name not provided for flashing
6:	CANape EXE path is not present.
7:	Flashing Failed
8:	Flash process failed
9:	Flash file path is not valid
10:	CANape path is not valid. Flashing Failed
11:	Executable file is not valid.
*/

includes
{
  
}

variables
{
  msTimer  checkFlashingComplete;
 // message CAN1.ISOx_ACC_Resp_FD_XIX_HCP1_CANFD04 DiagReq  = {DIR = TX, dlc = 8, byte(0) = 0x02, byte(1) = 0x10, byte(2) = 0x03};
  
  int responseReceived, flashCountDown, errorCode = 0;
}

//on timer diagReqTimer
//{
//  output(DiagReq);
//  setTimer(diagReqTimer,3000);
//}

on timer checkFlashingComplete
{
  dword g_fileHdl_dw;
  char buf[255]="";
  double readValue=-1;
  g_fileHdl_dw = OpenFileRead("C:\\Flash\\Flashing_Failed.txt",0);
 
  if(g_fileHdl_dw!=0 )
  {
    while ( fileGetString(buf,elcount(buf),g_fileHdl_dw)!=0 ) {};
   // strtod(buf,readValue);
    
    
    if (0 == strncmp("Failed",buf,6))
    {
    errorCode = 7;
     }
    else
    {
    errorCode = 0;
     }
    fileClose (g_fileHdl_dw);
    g_fileHdl_dw = 0;
    
    //Stop();
    testSupplyTextEvent("Flashing Process Closed");
  }
  else
  {
    if ((--flashCountDown) > 0)
    {
      //write("Error Code File not found. %d Flash Count Down", flashCountDown);
      setTimer(checkFlashingComplete, 3000);
    }
    else
    {
      write("Error Code File not found. last attempt");
      testSupplyTextEvent("Flashing Process Closed");
    }
  }    
}

export testfunction TF_FlashFile(int Timeout)
{
  int return_value;
  
  //initialize variables
  return_value = 1;
  responseReceived = 0;
  errorCode = 0;
  
//  //initiate Diag Request Timer
//  setTimer(diagReqTimer,3000);
  
  //wait for the Diag Response
  //testWaitForTextEvent("Diag Response Received",Timeout);
  
  //Check if positive response is received
//  if(responseReceived == 1)
//  {
    //initiate Flashing
    trigger_autorun();
    
    //Wait for the Flashing Process to close
    testWaitForTextEvent("Flashing Process Closed",Timeout);
    
    //Check the Error Code
    if(errorCode==0)
    {
      testStepPass("", "Flashing is successful");
    }
    else if(errorCode==1)
    {
      testStepErrorInTestSystem("", "Flash INI file path not found");
    }
     else if(errorCode==2)
    {
      testStepErrorInTestSystem("", "No executable file added to the project");
    }
     else if(errorCode==3)
    {
      testStepErrorInTestSystem("", "CNA file path not found");
    }
     else if(errorCode==4)
    {
      testStepErrorInTestSystem("", "Sensor IP not provided");
    }
     else if(errorCode==5)
    {
      testStepErrorInTestSystem("", "Device name not provided for flashing");
    }
     else if(errorCode==6)
    {
      testStepErrorInTestSystem("", "CANape EXE path is not present");
    }
     else if(errorCode==7)
    {
      testStepErrorInTestSystem("", "Flashing Failed");
    }
     else if(errorCode==8)
    {
      testStepErrorInTestSystem("", "Flashing Process couldn't be started");
    }
     else if(errorCode==9)
    {
      testStepErrorInTestSystem("", "Flash file path is not valid");
    }
     else if(errorCode==10)
    {
      testStepErrorInTestSystem("", "CANape path is not valid. Flashing Failed");
    }
     else if(errorCode==11)
    {
      testStepErrorInTestSystem("", "CANape path is not valid. Flashing Failed");
    }


}

//on message CAN1.ISOx_ACC_Resp_FD_XIX_HCP1_CANFD04
//{
//  if ((this.byte(1) = 0x50) && (this.byte(2)= 0x03))
//  {
//    if(responseReceived == 0)
//    {
//      write("Obtained positive Response");
//      responseReceived = 1;
//      testSupplyTextEvent("Diag Response Received");
//    }
//  }
//}

void trigger_autorun()
{
  flashCountDown = 200;
  write("Triggered autorun..");
  testWaitForSyscall("C:\\Flash\\Test.bat",0,(1000*60*4));
  setTimer(checkFlashingComplete, 3000);
}